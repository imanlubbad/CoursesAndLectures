// Generated by view binder compiler. Do not edit!
package com.m_learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.m_learning.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAssignmentsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ibtnDownload;

  @NonNull
  public final ImageButton ibtnView;

  @NonNull
  public final ImageView ivImage;

  @NonNull
  public final LinearLayout root;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvNote;

  @NonNull
  public final TextView tvStudentName;

  @NonNull
  public final TextView tvTitle;

  private ItemAssignmentsBinding(@NonNull LinearLayout rootView, @NonNull ImageView ibtnDownload,
      @NonNull ImageButton ibtnView, @NonNull ImageView ivImage, @NonNull LinearLayout root,
      @NonNull TextView tvDate, @NonNull TextView tvNote, @NonNull TextView tvStudentName,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.ibtnDownload = ibtnDownload;
    this.ibtnView = ibtnView;
    this.ivImage = ivImage;
    this.root = root;
    this.tvDate = tvDate;
    this.tvNote = tvNote;
    this.tvStudentName = tvStudentName;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAssignmentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAssignmentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_assignments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAssignmentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ibtn_download;
      ImageView ibtnDownload = ViewBindings.findChildViewById(rootView, id);
      if (ibtnDownload == null) {
        break missingId;
      }

      id = R.id.ibtn_view;
      ImageButton ibtnView = ViewBindings.findChildViewById(rootView, id);
      if (ibtnView == null) {
        break missingId;
      }

      id = R.id.iv_image;
      ImageView ivImage = ViewBindings.findChildViewById(rootView, id);
      if (ivImage == null) {
        break missingId;
      }

      LinearLayout root = (LinearLayout) rootView;

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_note;
      TextView tvNote = ViewBindings.findChildViewById(rootView, id);
      if (tvNote == null) {
        break missingId;
      }

      id = R.id.tv_student_name;
      TextView tvStudentName = ViewBindings.findChildViewById(rootView, id);
      if (tvStudentName == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ItemAssignmentsBinding((LinearLayout) rootView, ibtnDownload, ibtnView, ivImage,
          root, tvDate, tvNote, tvStudentName, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
