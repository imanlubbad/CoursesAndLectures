// Generated by view binder compiler. Do not edit!
package com.m_learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.m_learning.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MessageListRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView count;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final RelativeLayout frameLayout;

  @NonNull
  public final CircularProgressIndicator imageProgress;

  @NonNull
  public final ImageView ivUserAvatar;

  @NonNull
  public final View line;

  @NonNull
  public final LinearLayout llChatParent;

  @NonNull
  public final LinearLayout parentPanel;

  @NonNull
  public final CircularProgressIndicator progress;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvNotifDesc;

  @NonNull
  public final TextView tvNotifTime;

  @NonNull
  public final Button undoButton;

  private MessageListRowBinding(@NonNull LinearLayout rootView, @NonNull TextView count,
      @NonNull Button deleteButton, @NonNull RelativeLayout frameLayout,
      @NonNull CircularProgressIndicator imageProgress, @NonNull ImageView ivUserAvatar,
      @NonNull View line, @NonNull LinearLayout llChatParent, @NonNull LinearLayout parentPanel,
      @NonNull CircularProgressIndicator progress, @NonNull TextView tvName,
      @NonNull TextView tvNotifDesc, @NonNull TextView tvNotifTime, @NonNull Button undoButton) {
    this.rootView = rootView;
    this.count = count;
    this.deleteButton = deleteButton;
    this.frameLayout = frameLayout;
    this.imageProgress = imageProgress;
    this.ivUserAvatar = ivUserAvatar;
    this.line = line;
    this.llChatParent = llChatParent;
    this.parentPanel = parentPanel;
    this.progress = progress;
    this.tvName = tvName;
    this.tvNotifDesc = tvNotifDesc;
    this.tvNotifTime = tvNotifTime;
    this.undoButton = undoButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MessageListRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MessageListRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.message_list_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MessageListRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.count;
      TextView count = ViewBindings.findChildViewById(rootView, id);
      if (count == null) {
        break missingId;
      }

      id = R.id.delete_button;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      RelativeLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.imageProgress;
      CircularProgressIndicator imageProgress = ViewBindings.findChildViewById(rootView, id);
      if (imageProgress == null) {
        break missingId;
      }

      id = R.id.iv_userAvatar;
      ImageView ivUserAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ivUserAvatar == null) {
        break missingId;
      }

      id = R.id.line;
      View line = ViewBindings.findChildViewById(rootView, id);
      if (line == null) {
        break missingId;
      }

      LinearLayout llChatParent = (LinearLayout) rootView;

      id = R.id.parentPanel;
      LinearLayout parentPanel = ViewBindings.findChildViewById(rootView, id);
      if (parentPanel == null) {
        break missingId;
      }

      id = R.id.progress;
      CircularProgressIndicator progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_notifDesc;
      TextView tvNotifDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvNotifDesc == null) {
        break missingId;
      }

      id = R.id.tv_notifTime;
      TextView tvNotifTime = ViewBindings.findChildViewById(rootView, id);
      if (tvNotifTime == null) {
        break missingId;
      }

      id = R.id.undo_button;
      Button undoButton = ViewBindings.findChildViewById(rootView, id);
      if (undoButton == null) {
        break missingId;
      }

      return new MessageListRowBinding((LinearLayout) rootView, count, deleteButton, frameLayout,
          imageProgress, ivUserAvatar, line, llChatParent, parentPanel, progress, tvName,
          tvNotifDesc, tvNotifTime, undoButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
