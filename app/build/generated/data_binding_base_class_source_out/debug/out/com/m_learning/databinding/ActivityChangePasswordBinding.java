// Generated by view binder compiler. Do not edit!
package com.m_learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.m_learning.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText edConfirmPassword;

  @NonNull
  public final EditText edNewPassword;

  @NonNull
  public final EditText edPassword;

  @NonNull
  public final Toolbar toolbar;

  private ActivityChangePasswordBinding(@NonNull LinearLayout rootView, @NonNull Button btnSave,
      @NonNull EditText edConfirmPassword, @NonNull EditText edNewPassword,
      @NonNull EditText edPassword, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.edConfirmPassword = edConfirmPassword;
    this.edNewPassword = edNewPassword;
    this.edPassword = edPassword;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.ed_confirm_password;
      EditText edConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (edConfirmPassword == null) {
        break missingId;
      }

      id = R.id.ed_new_password;
      EditText edNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (edNewPassword == null) {
        break missingId;
      }

      id = R.id.ed_password;
      EditText edPassword = ViewBindings.findChildViewById(rootView, id);
      if (edPassword == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityChangePasswordBinding((LinearLayout) rootView, btnSave, edConfirmPassword,
          edNewPassword, edPassword, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
