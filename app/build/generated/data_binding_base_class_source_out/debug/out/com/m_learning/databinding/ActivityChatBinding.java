// Generated by view binder compiler. Do not edit!
package com.m_learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.m_learning.R;
import hani.momanii.supernova_emoji_library.Helper.EmojiconEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChatBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton buttonEmoji;

  @NonNull
  public final ImageButton buttonMessage;

  @NonNull
  public final LinearLayout contentRoot;

  @NonNull
  public final EmojiconEditText editTextMessage;

  @NonNull
  public final FrameLayout frameLayout;

  @NonNull
  public final ImageButton ibAddImg;

  @NonNull
  public final ImageButton ivBack;

  @NonNull
  public final ImageView ivConnect;

  @NonNull
  public final LinearLayout llAddMsg;

  @NonNull
  public final LinearLayout llProgress;

  @NonNull
  public final CircularProgressIndicator loadMore;

  @NonNull
  public final RecyclerView messageRecyclerView;

  @NonNull
  public final CircularProgressIndicator progress;

  @NonNull
  public final TextView textView;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvCanNotChatWith;

  @NonNull
  public final TextView tvStatusTitle;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvWarn;

  @NonNull
  public final CircularProgressIndicator viewTypingInd;

  private ActivityChatBinding(@NonNull LinearLayout rootView, @NonNull ImageButton buttonEmoji,
      @NonNull ImageButton buttonMessage, @NonNull LinearLayout contentRoot,
      @NonNull EmojiconEditText editTextMessage, @NonNull FrameLayout frameLayout,
      @NonNull ImageButton ibAddImg, @NonNull ImageButton ivBack, @NonNull ImageView ivConnect,
      @NonNull LinearLayout llAddMsg, @NonNull LinearLayout llProgress,
      @NonNull CircularProgressIndicator loadMore, @NonNull RecyclerView messageRecyclerView,
      @NonNull CircularProgressIndicator progress, @NonNull TextView textView,
      @NonNull Toolbar toolbar, @NonNull TextView tvCanNotChatWith, @NonNull TextView tvStatusTitle,
      @NonNull TextView tvTitle, @NonNull TextView tvWarn,
      @NonNull CircularProgressIndicator viewTypingInd) {
    this.rootView = rootView;
    this.buttonEmoji = buttonEmoji;
    this.buttonMessage = buttonMessage;
    this.contentRoot = contentRoot;
    this.editTextMessage = editTextMessage;
    this.frameLayout = frameLayout;
    this.ibAddImg = ibAddImg;
    this.ivBack = ivBack;
    this.ivConnect = ivConnect;
    this.llAddMsg = llAddMsg;
    this.llProgress = llProgress;
    this.loadMore = loadMore;
    this.messageRecyclerView = messageRecyclerView;
    this.progress = progress;
    this.textView = textView;
    this.toolbar = toolbar;
    this.tvCanNotChatWith = tvCanNotChatWith;
    this.tvStatusTitle = tvStatusTitle;
    this.tvTitle = tvTitle;
    this.tvWarn = tvWarn;
    this.viewTypingInd = viewTypingInd;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonEmoji;
      ImageButton buttonEmoji = ViewBindings.findChildViewById(rootView, id);
      if (buttonEmoji == null) {
        break missingId;
      }

      id = R.id.buttonMessage;
      ImageButton buttonMessage = ViewBindings.findChildViewById(rootView, id);
      if (buttonMessage == null) {
        break missingId;
      }

      LinearLayout contentRoot = (LinearLayout) rootView;

      id = R.id.editTextMessage;
      EmojiconEditText editTextMessage = ViewBindings.findChildViewById(rootView, id);
      if (editTextMessage == null) {
        break missingId;
      }

      id = R.id.frameLayout;
      FrameLayout frameLayout = ViewBindings.findChildViewById(rootView, id);
      if (frameLayout == null) {
        break missingId;
      }

      id = R.id.ib_add_img;
      ImageButton ibAddImg = ViewBindings.findChildViewById(rootView, id);
      if (ibAddImg == null) {
        break missingId;
      }

      id = R.id.iv_back;
      ImageButton ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_connect;
      ImageView ivConnect = ViewBindings.findChildViewById(rootView, id);
      if (ivConnect == null) {
        break missingId;
      }

      id = R.id.llAddMsg;
      LinearLayout llAddMsg = ViewBindings.findChildViewById(rootView, id);
      if (llAddMsg == null) {
        break missingId;
      }

      id = R.id.ll_progress;
      LinearLayout llProgress = ViewBindings.findChildViewById(rootView, id);
      if (llProgress == null) {
        break missingId;
      }

      id = R.id.loadMore;
      CircularProgressIndicator loadMore = ViewBindings.findChildViewById(rootView, id);
      if (loadMore == null) {
        break missingId;
      }

      id = R.id.messageRecyclerView;
      RecyclerView messageRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (messageRecyclerView == null) {
        break missingId;
      }

      id = R.id.progress;
      CircularProgressIndicator progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvCanNotChatWith;
      TextView tvCanNotChatWith = ViewBindings.findChildViewById(rootView, id);
      if (tvCanNotChatWith == null) {
        break missingId;
      }

      id = R.id.tv_status_title;
      TextView tvStatusTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvStatusTitle == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tvWarn;
      TextView tvWarn = ViewBindings.findChildViewById(rootView, id);
      if (tvWarn == null) {
        break missingId;
      }

      id = R.id.viewTypingInd;
      CircularProgressIndicator viewTypingInd = ViewBindings.findChildViewById(rootView, id);
      if (viewTypingInd == null) {
        break missingId;
      }

      return new ActivityChatBinding((LinearLayout) rootView, buttonEmoji, buttonMessage,
          contentRoot, editTextMessage, frameLayout, ibAddImg, ivBack, ivConnect, llAddMsg,
          llProgress, loadMore, messageRecyclerView, progress, textView, toolbar, tvCanNotChatWith,
          tvStatusTitle, tvTitle, tvWarn, viewTypingInd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
